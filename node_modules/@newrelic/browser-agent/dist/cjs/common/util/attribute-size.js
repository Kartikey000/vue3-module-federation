"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.trackObjectAttributeSize = trackObjectAttributeSize;
var _stringify = require("./stringify");
/**
 * Copyright 2020-2025 New Relic, Inc. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

function trackObjectAttributeSize(parent, object) {
  const originalAttribute = parent[object] ??= {};
  const output = {
    bytes: Object.keys(originalAttribute).reduce((acc, key) => acc + key.length + (0, _stringify.stringify)(originalAttribute[key]).length, 0)
  };
  // proxy attribute to calculate its size when changed
  parent[object] = new Proxy(originalAttribute, {
    set(target, prop, value) {
      output.bytes += prop.length + (0, _stringify.stringify)(value).length;
      target[prop] = value;
      return true;
    },
    deleteProperty(target, prop) {
      output.bytes -= prop.length + (0, _stringify.stringify)(target[prop]).length;
      return delete target[prop];
    }
  });
  return output;
}