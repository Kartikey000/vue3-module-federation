"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.activateFeatures = activateFeatures;
exports.activatedFeatures = void 0;
var _globalEvent = require("../dispatch/global-event");
/**
 * Copyright 2020-2025 New Relic, Inc. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

const sentIds = new Set();

/** A map of feature flags and their values as provided by the rum call -- scoped by agent ID */
const activatedFeatures = exports.activatedFeatures = {};

/**
 * Sets the activatedFeatures object, dispatches the global loaded event,
 * and emits the rumresp flag to features
 * @param {{[key:string]:number}} flags key-val pair of flag names and numeric
 * @param {string} agentIdentifier agent instance identifier
 * @returns {void}
 */
function activateFeatures(flags, agentRef) {
  const agentIdentifier = agentRef.agentIdentifier;
  activatedFeatures[agentIdentifier] ??= {};
  if (!flags || typeof flags !== 'object') return;
  if (sentIds.has(agentIdentifier)) return;
  agentRef.ee.emit('rumresp', [flags]);
  activatedFeatures[agentIdentifier] = flags;
  sentIds.add(agentIdentifier);

  // let any window level subscribers know that the agent is running, per install docs
  (0, _globalEvent.dispatchGlobalEvent)({
    agentIdentifier,
    loaded: true,
    drained: true,
    type: 'lifecycle',
    name: 'load',
    feature: undefined,
    data: flags
  });
}