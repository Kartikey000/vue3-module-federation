"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.START = exports.RESOURCE = exports.PUSH_STATE = exports.MAX_NODES_PER_HARVEST = exports.FN_START = exports.FN_END = exports.FEATURE_NAME = exports.ERROR_MODE_SECONDS_WINDOW = exports.END = exports.BST_RESOURCE = void 0;
var _features = require("../../loaders/features/features");
/**
 * Copyright 2020-2025 New Relic, Inc. All rights reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

const FEATURE_NAME = exports.FEATURE_NAME = _features.FEATURE_NAMES.sessionTrace;
const BST_RESOURCE = exports.BST_RESOURCE = 'bstResource';
const RESOURCE = exports.RESOURCE = 'resource';
const START = exports.START = '-start';
const END = exports.END = '-end';
const FN_START = exports.FN_START = 'fn' + START;
const FN_END = exports.FN_END = 'fn' + END;
const PUSH_STATE = exports.PUSH_STATE = 'pushState';
const MAX_NODES_PER_HARVEST = exports.MAX_NODES_PER_HARVEST = 1000;
const ERROR_MODE_SECONDS_WINDOW = exports.ERROR_MODE_SECONDS_WINDOW = 30 * 1000; // sliding window of nodes to track when simply monitoring (but not harvesting) in error mode