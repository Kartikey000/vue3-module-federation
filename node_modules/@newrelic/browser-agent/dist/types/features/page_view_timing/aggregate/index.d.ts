export class Aggregate extends AggregateBase {
    static featureName: string;
    constructor(agentRef: any);
    curSessEndRecorded: boolean;
    firstIxnRecorded: boolean;
    /**
     * Add the time of _document visibilitychange to hidden_ to the next PVT harvest == NRDB pageHide attr.
     * @param {number} timestamp
     */
    endCurrentSession(timestamp: number): void;
    addTiming(name: any, value: any, attrs: any): {
        name: any;
        value: any;
        attrs: any;
    };
    /**
     * Checks the performance API to see if the agent can set a first interaction event value
     * @returns {void}
     */
    checkForFirstInteraction(): void;
    appendGlobalCustomAttributes(timing: any): void;
    preHarvestChecks(): boolean;
    serializer(eventBuffer: any): string;
    #private;
}
import { AggregateBase } from '../../utils/aggregate-base';
//# sourceMappingURL=index.d.ts.map