export class FeatureBase {
    constructor(agentIdentifier: any, featureName: any);
    /** @type {string} */
    agentIdentifier: string;
    /** @type {import('../../common/event-emitter/contextual-ee').ee} */
    ee: any;
    /** @type {string} */
    featureName: string;
    /**
     * Blocked can be used to prevent aggregation and harvest after inititalization time of the feature.
     * This can currently happen if RUM response setToken flag is 0, which is tied to ingest account entitlement info.
     * @type {boolean}
     */
    blocked: boolean;
    deregisterDrain(): void;
}
//# sourceMappingURL=feature-base.d.ts.map