export class AggregatedUserAction {
    constructor(evt: any, selectorInfo: any);
    event: any;
    count: number;
    originMs: number;
    relativeMs: number[];
    selectorPath: any;
    rageClick: boolean | undefined;
    nearestTargetFields: any;
    currentUrl: string;
    deadClick: boolean;
    errorClick: boolean;
    /**
     * Aggregates the count and maintains the relative MS array for matching events
     * Will determine if a rage click was observed as part of the aggregation
     * @param {Event} evt
     * @returns {void}
     */
    aggregate(evt: Event): void;
    /**
     * Determines if the current set of relative ms values constitutes a rage click
     * @returns {boolean}
     */
    isRageClick(): boolean;
}
//# sourceMappingURL=aggregated-user-action.d.ts.map