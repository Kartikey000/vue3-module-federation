export class Aggregate extends AggregateBase {
    static featureName: string;
    constructor(agentRef: any);
    referrerUrl: string | undefined;
    /** Some keys are set by the query params or request headers sent with the harvest and override the body values, so check those before adding new standard body values...
     * see harvest.js#baseQueryString for more info on the query params
     * Notably:
     * * name: set by the `t=` query param
     * * appId: set by the `a=` query param
     * * standalone: set by the `sa=` query param
     * * session: set by the `s=` query param
     * * sessionTraceId: set by the `ptid=` query param
     * * userAgent*: set by the userAgent header
     * @param {object=} obj the event object for storing in the event buffer
     * @param {string=} targetEntityGuid the target entity guid for the event to scope buffering and harvesting. Defaults to agent config if undefined
     * @returns void
     */
    addEvent(obj?: object | undefined, targetEntityGuid?: string | undefined): void;
    serializer(eventBuffer: any): Object;
    queryStringsBuilder(): {
        ua: any;
        at: any;
    };
    toEpoch(timestamp: any): number;
    #private;
}
import { AggregateBase } from '../../utils/aggregate-base';
//# sourceMappingURL=index.d.ts.map