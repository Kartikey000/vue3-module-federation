declare namespace globalInstance {
    export { addEventListener as on };
    export { addEventListener };
    export { removeEventListener };
    export { emit };
    export { getOrCreate as get };
    export { listeners };
    export { context };
    export { bufferEventsByGroup as buffer };
    export { abort };
    export { isBuffering };
    export { debugId };
    export let backlog: any;
    export { isolatedBacklog };
}
export const contextId: string;
declare function emit(type: any, args: any, contextOrStore: any, force: any, bubble: any): any;
declare function getOrCreate(name: any): any;
declare function listeners(type: any): any;
declare function bufferEventsByGroup(types: any, group: any): void;
declare function abort(): void;
declare function isBuffering(type: any): boolean;
declare var isolatedBacklog: boolean;
export { globalInstance as ee };
//# sourceMappingURL=contextual-ee.d.ts.map