/**
 * setupAPI is a utility function that assigns API methods to an object while emitting supportability metrics and global events.
 * @param {string} name The API method name to be set up.
 * @param {Function} fn The function to be executed when the API method is called.
 * @param {Object} agent The agent instance.  Will be used if no object is provided to assign the api method to.
 * @param {Object} [obj] The object to which the API method will be assigned.
 * @returns {*} The output of the function being called.
 */
export function setupAPI(name: string, fn: Function, agent: Object, obj?: Object): any;
/**
   * Attach the key-value attribute onto agent payloads. All browser events in NR will be affected.
   * @param {Agent} agent the agent instance reference
   * @param {string} key
   * @param {string|number|boolean|null} value - null indicates the key should be removed or erased
   * @param {string} apiName
   * @param {boolean} addToBrowserStorage - whether this attribute should be stored in browser storage API and retrieved by the next agent context or initialization
   * @returns @see apiCall
   */
export function appendJsAttribute(agent: Agent, key: string, value: string | number | boolean | null, apiName: string, addToBrowserStorage: boolean): void;
//# sourceMappingURL=sharedHandlers.d.ts.map